{
    "project": {
        "name": "spree-ember-checkouts",
        "shortName": "checkouts",
        "description": "Checkout functionality for a Spree Ember Application.",
        "version": "0.0.0.7280245b"
    },
    "files": {
        "addon/mixins/checkouts.js": {
            "name": "addon/mixins/checkouts.js",
            "modules": {},
            "classes": {
                "CheckoutsMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/serializers/order.js": {
            "name": "addon/serializers/order.js",
            "modules": {},
            "classes": {
                "OrderSerializer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "app/checkouts/spree.js": {
            "name": "app/checkouts/spree.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "CheckoutsMixin": {
            "name": "CheckoutsMixin",
            "shortname": "CheckoutsMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "addon/mixins/checkouts.js",
            "line": 3,
            "description": "Provides Current Order and Checkout Functionality to the Spree service.  This\nmixin is applied to the Spree service when spree-ember-checkouts initializes,\ntherefore all functionality described here is available like so:\n\n```javascript\nthis.spree.addToCart(variantModel, 5);\n```",
            "extends": "Ember.Mixin"
        },
        "OrderSerializer": {
            "name": "OrderSerializer",
            "shortname": "OrderSerializer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "addon/serializers/order.js",
            "line": 2,
            "description": "The Order Serializer converts the Order model into a JSON payload as dictated \nby Spree's \"Checkouts\" endpoint.  The payload is dependant on the state of the \norder.",
            "extends": "SpreeSerializer"
        }
    },
    "classitems": [
        {
            "file": "addon/mixins/checkouts.js",
            "line": 16,
            "description": "A generic event triggered whenever a Spree Server request fails.",
            "itemtype": "event",
            "name": "serverError",
            "params": [
                {
                    "name": "error",
                    "description": "The error object returned from the Spree Server.",
                    "type": "Object"
                }
            ],
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 23,
            "description": "Triggered whenever a Line Item is created or updated.",
            "itemtype": "event",
            "name": "didAddToCart",
            "params": [
                {
                    "name": "lineItem",
                    "description": "The newly updated lineItem object",
                    "type": "Object"
                }
            ],
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 30,
            "description": "Triggered whenever a Line Item is created or updated.",
            "itemtype": "event",
            "name": "addToCartFailed",
            "params": [
                {
                    "name": "error",
                    "description": "The returned Server Error.",
                    "type": "Error"
                }
            ],
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 37,
            "description": "Triggered whenever a new Order is created for the checkout user.",
            "itemtype": "event",
            "name": "didCreateNewOrder",
            "params": [
                {
                    "name": "order",
                    "description": "The newly created order object",
                    "type": "Object"
                }
            ],
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 44,
            "description": "Triggered whenever a new Order is created for the checkout user.",
            "itemtype": "event",
            "name": "newOrderCreateFailed",
            "params": [
                {
                    "name": "error",
                    "description": "The returned Server Error.",
                    "type": "Object"
                }
            ],
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 51,
            "description": "Triggered whenever a new Order is created for the checkout user.",
            "itemtype": "event",
            "name": "didClearCurrentOrder",
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 57,
            "description": "Triggered whenever the Current Order changes State.",
            "itemtype": "event",
            "name": "checkoutStateDidChange",
            "params": [
                {
                    "name": "order",
                    "description": "A string representing the new state.",
                    "type": "String"
                }
            ],
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 64,
            "description": "Triggered when the `advanceCurrentOrder` call succeeds.",
            "itemtype": "event",
            "name": "advanceCurrentOrderFailed",
            "params": [
                {
                    "name": "currentOrderPromise",
                    "description": "A promise that resolves to \nthe Current Order",
                    "type": "Ember.RSVP.Promise"
                }
            ],
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 72,
            "description": "Triggered when the `advanceCurrentOrder` call fails.",
            "itemtype": "event",
            "name": "advanceCurrentOrderFailed",
            "params": [
                {
                    "name": "error",
                    "description": "The returned Server Error.",
                    "type": "Error"
                }
            ],
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 79,
            "description": "Triggered whenever the Current Order reached it's \"Complete\" State.",
            "itemtype": "event",
            "name": "currentOrderDidComplete",
            "params": [
                {
                    "name": "order",
                    "description": "A string representing the new state.",
                    "type": "String"
                }
            ],
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 86,
            "description": "A method called in the `spree-ember-checkouts` initializer after the\n`Checkouts` mixin is applied to the Spree service, to initialize functionality\nin this mixin.",
            "itemtype": "method",
            "name": "initCheckouts",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "application",
                    "description": "A reference to the initializing Application.",
                    "type": "Ember.Application"
                }
            ],
            "return": {
                "description": "Always resolves to `true`.",
                "type": "Boolean"
            },
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 125,
            "description": "The token used to Authenticate the current user against the current order.  Persisted\nto local storage via `spree-ember-core/mixins/storable`.  This property is\nsent to the Spree server via the header `X-Spree-Order-Token`.",
            "itemtype": "property",
            "name": "guestToken",
            "type": "String",
            "readonly": "",
            "default": "null",
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 137,
            "description": "The user's Current Order number, persisted to local storage via\n`spree-ember-core/mixins/storable`.  This property is sent to the Spree\nserver via the header `X-Spree-Order-Id`.",
            "itemtype": "property",
            "name": "orderId",
            "type": "String",
            "readonly": "",
            "default": "null",
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 149,
            "description": "A reference to the Current Order.  It is only set twice in this code,\nonce on Application initialization (in the case it was persisted), and once\nwhen a new order is created through the internal method `_createNewOrder`.",
            "itemtype": "property",
            "name": "currentOrder",
            "type": "DS.Model",
            "default": "null",
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 160,
            "description": "Adds state machine functionality to the Spree service.",
            "itemtype": "method",
            "name": "_setupStateMachineForOrder",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "order",
                    "description": "A reference to the Current Order",
                    "type": "Ember.Object"
                }
            ],
            "return": {
                "description": "Returns the newly instantiated StateMachine instance.",
                "type": "StateMachine"
            },
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 176,
            "description": "If a state name is passed to this method, the state machine will attempt to\ntransition directly to that state.  If not, we will attempt to transition\nto the next state in the checkout flow.",
            "itemtype": "method",
            "name": "transitionCheckoutState",
            "params": [
                {
                    "name": "stateName",
                    "description": "Optional, a state to attempt transition to.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A function that calls the State Machine's transition, and\nthen resolves to StateMachine.ASYNC (see app/checkouts/spree.js)",
                "type": "Function"
            },
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 204,
            "description": "Saves the Current Order via the Spree API `checkouts` endpoint.  This method\nfirst serializes the order in a format that the endpoint expects, and hits\nthat endpoint.\n\nIf the server determines that the Order can transition to another state, it\nwill.  Therefore, we only use this method inside of the State Machine\ncallback, so we can handle the Client Side state machine appropriately.",
            "itemtype": "method",
            "name": "_saveCurrentOrder",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "A promise that resolves to either a successful\nserver response (that may contain errors in the payload), or an AJAX error.",
                "type": "Ember.RSVP.Promise"
            },
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 238,
            "description": "This method will attempt to force the Order's state to the next State.  It's\nuseful for triggering server validation errors, when it's not clear why an \norder won't advance to the next state.",
            "itemtype": "method",
            "name": "_advanceCurrentOrder",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "A promise that resolves to either a successful\nserver response (that may contain errors in the payload), or an AJAX error.",
                "type": "Ember.RSVP.Promise"
            },
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 270,
            "description": "Adds a lineItem to the currentOrder. If there is no Current Order,\nSpree Ember will request a new order from the server, and set it as the\nCurrent Order on the Spree service.",
            "itemtype": "method",
            "name": "addToCart",
            "params": [
                {
                    "name": "variant",
                    "description": "A class of the variant model",
                    "type": "DS.Model"
                },
                {
                    "name": "quantity",
                    "description": "A quantity for the Line Item.",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "A promise that resolves to the newly saved Line Item.",
                "type": "Ember.RSVP.Promise"
            },
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 300,
            "description": "An internal method for saving Line Items.  If it is called for a variant that\nis already in the current order, it will add to the corresponding Line Item's\nquantity, otherwise it will create a new Line Item for that variant.",
            "itemtype": "method",
            "name": "_saveLineItem",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "variant",
                    "description": "A class of the variant model",
                    "type": "Ember.Object"
                },
                {
                    "name": "quantity",
                    "description": "A quantity for the `lineItem`",
                    "type": "Integer"
                },
                {
                    "name": "order",
                    "description": "The corresponding order",
                    "type": "Ember.Object"
                }
            ],
            "return": {
                "description": "A promise that resolves to the newly created or\nupdated `lineItem` object.",
                "type": "Ember.RSVP.Promise"
            },
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 339,
            "description": "Will attempt to create a new Order for the checkout user, and save the `orderId`\nand `guestToken` to the Spree service, so that it will persist across page\nrefreshes.  It will also initiate the state machine for the current order.",
            "itemtype": "method",
            "name": "_createNewOrder",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "A promise that resolves to the newly created\nSpree Order.",
                "type": "Ember.RSVP.Promise"
            },
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/mixins/checkouts.js",
            "line": 370,
            "description": "Clears the current order and any reference to it.",
            "itemtype": "method",
            "name": "clearCurrentOrder",
            "return": {
                "description": "Always returns `true`.",
                "type": "Boolean"
            },
            "class": "CheckoutsMixin"
        },
        {
            "file": "addon/serializers/order.js",
            "line": 11,
            "description": "Serializes the Order into a format the Spree Checkouts endpoint expects.",
            "itemtype": "method",
            "name": "serialize",
            "params": [
                {
                    "name": "snapshot",
                    "description": "A snapshot of the order model for serialization.",
                    "type": "Snapshot"
                }
            ],
            "class": "OrderSerializer"
        },
        {
            "file": "app/checkouts/spree.js",
            "line": 1,
            "description": "An overrideable Array representing the possible states of the order, and it's\npossible transitions.  This should be informed by the Spree backend. The default\nvalues will work with Spree's default checkout steps.",
            "itemtype": "property",
            "name": "orderStateEvents",
            "type": "Array",
            "default": "Array",
            "class": ""
        },
        {
            "file": "app/checkouts/spree.js",
            "line": 19,
            "description": "An overrideable Object for binding callbacks to state changes in the Current\nSpree Order.  `this` in these callbacks represents the Current Order object.",
            "itemtype": "property",
            "name": "orderStateCallbacks",
            "type": "Object",
            "default": "Object",
            "class": ""
        },
        {
            "file": "app/checkouts/spree.js",
            "line": 79,
            "description": "An overrideable Function for resolving a pending State Machine transition, \ncalled after successful `saveCurrentOrder` call.",
            "itemtype": "property",
            "name": "resolvePendingTransition",
            "type": "Function",
            "default": "Function",
            "class": ""
        }
    ],
    "warnings": []
}